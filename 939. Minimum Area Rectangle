/*

939. Minimum Area Rectangle
Medium

Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.

If there isn't any rectangle, return 0.

 

Example 1:

Input: [[1,1],[1,3],[3,1],[3,3],[2,2]]
Output: 4
Example 2:

Input: [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]
Output: 2
 

Note:

1 <= points.length <= 500
0 <= points[i][0] <= 40000
0 <= points[i][1] <= 40000
All points are distinct.

*/

class Solution {
public:
    int minAreaRect(vector<vector<int>>& points) {
        ios::sync_with_stdio(false);
        map<pair<int, int> , bool> mp; 
        int x, y;
        for(int i = 0; i < points.size(); i++){
            x = points[i][0];
            y = points[i][1];
            mp[{x,y}] = true;
        } 
        int x1,y1,x3,y3;
        int area = INT_MAX;
        int found = false;
        for(int i = 0; i < points.size()-1; i++){
            x1 = points[i][0];
            y1 = points[i][1];
            for(int j = i+1; j<points.size(); j++){
                x3 = points[j][0];
                y3 = points[j][1];
                if(!(x1 == x3 || y1 == y3)){
                    if(mp[{x1,y3}] && mp[{x3,y1}]){
                        area = min(area, (abs(x3-x1)*abs(y3-y1)) );
                    }
                }
            }
        }
        return area < INT_MAX ? area : 0;    
    }
};
