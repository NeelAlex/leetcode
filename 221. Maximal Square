/*
221. Maximal Square
Medium

Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Example:

Input: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

Output: 4

*/
==========

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        ios::sync_with_stdio(false);
        int row = matrix.size();
        if(row == 0)
            return 0;
        int col = matrix[0].size();
        int** dp = new int*[row];
        for(int i = 0; i < row; i++){
            dp[i] = new int[col];
            for(int j = 0; j < col; j++){
                if(i == 0 || j == 0){
                    dp[i][j] = matrix[i][j]-'0';
                }
                else{
                    dp[i][j] = 0;
                }
            }
        }
        for(int i = 1; i < row; i++){
            for(int j = 1; j < col; j++){
                if(matrix[i][j]-'0' == 1){
                    dp[i][j] = 1+ min(dp[i-1][j-1], min(dp[i-1][j], dp[i][j-1]));
                }
            }
        }
        int maxSquare = 0;
        for(int i = 0; i < row; i++){
            for(int  j = 0 ; j < col; j++){
                maxSquare = max(maxSquare, dp[i][j]);
            }
        }
        return maxSquare*maxSquare;
    }
};
